hist(unlist(asdf143[29,3:500]),breaks=30)
hist(unlist(vv2[21,3:500]),breaks=30)
asdf143[29,1:2]
hist(unlist(asdf13[29,3:500]),breaks=30)
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
hist(unlist(asdf143[29,3:500]),breaks=30)
vv2[21,1:2]
asdf143[29,1:2]
hist(unlist(vv2[21,3:500]),breaks=30)
hist(unlist(asdf143[29,3:500]),breaks=30)
print(ggplot(vv2  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
library(ggplot2)
print(ggplot(vv2  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
library(dplyr)
library(stringr)
print(ggplot(vv2  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
library(tidyr)
print(ggplot(vv2  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
initialiseEnvironment(genomeFile="/Users/ananikolic/aGBM_scATAC_newcellranger/4218/outs/chrom_sizes.tsv",
cytobandFile="~/hg38_bands_full.bed",
cpgFile="~/cpg_counts_hg38.bed",
binSize=1e6,
minFrags=1e4,
cellSuffix=c("-1","-2"),
lowerTrim=0.5,
upperTrim=0.8)
print(ggplot(vv2  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
asdf12<-data.table(asdf1 %>% filter(chromArm!="cen") %>%  select(-raw_medians,-blacklist,-chromArm,-cpg))
asdf13<-asdf12[,lapply(.SD,loess.filter,asdf1$cpg),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
asdf12<-data.table(asdf1 %>% filter(chromArm!="cen") %>%  select(-raw_medians,-blacklist,-chromArm))
cpg_names<-asdf12$cpg
asdf12<-asdf12 %>% select(-cpg)
asdf13<-asdf12[,lapply(.SD,loess.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
loess.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-loess(formula = paste("yvals", "cpg", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted)
}
asdf13<-asdf12[,lapply(.SD,loess.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "cpg", sep = "~"), family="gaussian",
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted)
}
afit<-loess(cell_4~(1/(1+cpg)),data=asdf11)
colnames(asdf11)<-c(paste("cell",seq(1:4),sep="_"),'cpg')
plot(asdf11)
afit<-loess(cell_4~(1/(1+cpg)),data=asdf11)
afit_glm<-glm(cell_4~cpg,data=asdf11,model="gaussian")
afit_glm<-glm(cell_4~cpg,data=asdf11)
afit_glm
afit_glm$fitted.values
plot(afit_glm$fitted.values)
plot(afit_glm$y)
plot(afit_glm$fitted.values)
plot(afit_glm$y)
plot(afit_glm$fitted.values)
plot(afit_glm$fitted.values,afit_glm$y)
plot(afit_glm$fitted.values)
?glm
summary(afit_glm)
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "cpg", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted)
}
asdf13<-asdf12[,lapply(.SD,glm.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "cpg^2", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted)
}
afit_glm$fitted.values
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "cpg", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted.values)
}
asdf13<-asdf12[,lapply(.SD,glm.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "1/cpg", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted.values)
}
asdf13<-asdf12[,lapply(.SD,glm.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "(1/cpg)", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted.values)
}
asdf13<-asdf12[,lapply(.SD,glm.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
afit_glm<-glm(cell_4~(1/(1+cpg)),data=asdf11)
summary(afit_glm)
afit_glm$fitted.values
plot(afit_glm$fitted.values)
afit_glm<-glm(cell_4~cpg^2,data=asdf11)
summary(afit_glm)
afit_glm$fitted.values
plot(afit_glm$fitted.values)
summary(afit_glm)
afit_glm<-glm(cell_4~cpg^-1,data=asdf11)
afit_glm<-glm(cell_4~cpg^(-1),data=asdf11)
afit_glm<-glm(cell_4~cpg^(0.5),data=asdf11)
afit_glm<-glm(cell_4~cpg^(3),data=asdf11)
afit_glm<-glm(cell_4~cpg^3,data=asdf11)
afit_glm$fitted.values
plot(afit_glm$fitted.values)
plot(afit_glm$fitted.values)
afit_glm<-glm(cell_4~cpg^2,data=asdf11)
afit_glm$fitted.values
glm.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-glm(formula = paste("yvals", "cpg^2", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted.values)
}
asdf13<-asdf12[,lapply(.SD,glm.filter,cpg_names),.SDcols=-c("chrom","pos")]
asdf143<-asdf13[,chrom:=asdf12$chrom][,lapply(.SD,summaryFunction),by="chrom"]
print(ggplot(asdf143  %>% gather(Cell,Density,ends_with(scCNVCaller$cellSuffix)),aes(chrom,Density))+geom_violin(scale="width",trim=FALSE) +
theme(axis.text.x=element_text(angle=-90,vjust = 0.5,hjust = 0, color = "#000000"),
axis.text.y=element_text(color="#000000"),
axis.line.x.bottom = element_line(colour="#000000"),
axis.line.y.left =  element_line(colour="#000000"),
panel.background = element_rect(fill="#ffffff"),
plot.background = element_rect(color="#ffffff",fill="#ffffff")) +
xlab("Segment"))
predict(afit)
lines(predict(afit),col='red',lwd=2)
plot(afit$fitted)
lines(predict(afit),col='red',lwd=2)
plot(afit$y)
lines(predict(afit),col='red',lwd=2)
afit<-loess(cell_4~cpg,data=asdf11)
afit$fitted
plot(afit$fitted)
lines(predict(afit),col='red',lwd=2)
afit<-loess(cell_4~log(cpg),data=asdf11)
afit<-loess(cell_4~log(1+cpg),data=asdf11)
lines(predict(afit),col='red',lwd=2)
afit$fitted
lines(predict(afit),col='red',lwd=2)
plot(afit$y)
plot(afit$fitted)
lines(predict(afit),col='red',lwd=2)
loess.filter <- function (x,cpgdataset)  {
#print(x)
tmpdata<-cbind.data.frame(yvals=x,cpg=cpgdataset)
#  print(tmpdata)
fit_l<-loess(formula = paste("yvals", "log(cpg)", sep = "~"),
data = tmpdata)
# print(fit_l$fitted)
return(fit_l$fitted)
}
library(Signac)
library(Seurat)
loadFile <- function(countsFile,fragmentFile,metadataFile)
{
#return chromatin assay
counts = Read10X_h5(filename=countsFile)
fragment.path= fragmentFile #"/Users/ananikolic/pGBM_ATAC_2/pGBM_2932/fragments.tsv.gz"
chrom_assay <- CreateChromatinAssay(
counts = counts,
genome = 'hg38',
sep = c(":","-"),
fragments = fragment.path,
min.cells = 1
)
metadata <- read.csv(
file = metadataFile,
header = TRUE,
row.names = 1
)
tFile <- CreateSeuratObject(
counts = chrom_assay,
assay = "peaks", #,
meta.data = metadata
)
return(tFile)
}
sampPrefix="p2_3103"
sampPrefix2="p2_3402"
atac_file<-loadFile(countsFile=sprintf("~/pGBM_matrix/%s_raw_peak_bc_matrix.h5",sampPrefix),fragmentFile = "/Users/ananikolic/pGBM_ATAC_2/3103/fragments.tsv.gz",metadataFile = sprintf("/Users/ananikolic/pGBM_matrix/%s_singlecell.csv",sampPrefix))
atac_file2<-loadFile(countsFile=sprintf("~/pGBM_matrix/%s_raw_peak_bc_matrix.h5",sampPrefix2),fragmentFile = "/Users/ananikolic/pGBM_ATAC_2/3402/fragments.tsv.gz",metadataFile = sprintf("/Users/ananikolic/pGBM_matrix/%s_singlecell.csv",sampPrefix2))
initNormalize <- function(mFile)
{
mFile <- NucleosomeSignal(object = mFile)
mFile$pct_reads_in_peaks <- mFile$peak_region_fragments / mFile$passed_filters * 100
mFile$blacklist_ratio <- mFile$blacklist_region_fragments / mFile$peak_region_fragments
mFile <- subset(
x = mFile,
subset = peak_region_fragments > 3000 &
pct_reads_in_peaks > 15 &
blacklist_ratio < 0.05  & lowmapq < 30000
)
return(mFile)
}
#let's try again with TFIDF after merge
initRegionalize <- function(mFile,assayType="peaks")
{
mFile <- RunTFIDF(mFile)
mFile <- FindTopFeatures(mFile, min.cutoff = 'q0')
#mFile@assays$peaks@var.features
mFile <- RunSVD(
object = mFile,
assay = assayType,
reduction.key = 'LSI_',
reduction.name = 'lsi'
)
mFile <- RunUMAP(object = mFile, assay = assayType,reduction = 'lsi', dims = 2:10)
mFile <- FindNeighbors(object = mFile, assay = assayType, reduction = 'lsi', dims = 2:10,prune.SNN = 0.06,k.param=21) #,k.param = 71)
mFile <- FindClusters(object = mFile, assay = assayType, verbose = FALSE, algorithm = 3,n.start = 10,resolution = 0.5,group.singletons = FALSE)
return(mFile)
}
initRegionalize <- function(mFile,assayType="peaks",doTFIDF=TRUE)
{
if (doTFIDF)
{
mFile <- RunTFIDF(mFile)
}
mFile <- FindTopFeatures(mFile, min.cutoff = 'q0')
#mFile@assays$peaks@var.features
mFile <- RunSVD(
object = mFile,
assay = assayType,
reduction.key = 'LSI_',
reduction.name = 'lsi'
)
mFile <- RunUMAP(object = mFile, assay = assayType,reduction = 'lsi', dims = 2:10)
mFile <- FindNeighbors(object = mFile, assay = assayType, reduction = 'lsi', dims = 2:10,prune.SNN = 0.06,k.param=21) #,k.param = 71)
mFile <- FindClusters(object = mFile, assay = assayType, verbose = FALSE, algorithm = 3,n.start = 10,resolution = 0.5,group.singletons = FALSE)
return(mFile)
}
loadChromCNVOriginal <- function(cnvFile,atacFile,selSuffix="-1")
{
b<-read.csv(cnvFile,stringsAsFactors=FALSE,row.names=1,header=TRUE)
bb<-column_to_rownames(rownames_to_column(b,var="Cell") %>% dplyr::filter(str_detect(Cell,selSuffix)) %>% mutate(Cell=str_replace(Cell,"-2","-1")),var="Cell")
#b<-read.csv("~/SF11956_2_new22_cnv_scores.csv",stringsAsFactors=FALSE,row.names=1,header=TRUE)
#b<-read.csv("~/diaz_3_SF11956_2_nolog_test_new_cnv_anno_binary.csv",stringsAsFactors=FALSE,row.names=1,header=TRUE)
#names(atac_file$orig.ident)
b1<-left_join(data.frame(Cell=names(atacFile$orig.ident)),rownames_to_column(bb,var="Cell"),by="Cell")
#SMOOTH
atacFile<-AddMetaData(atacFile,column_to_rownames(b1,var="Cell"))
return(atacFile)
}
loadChromCNV <- function(cnvFile,atacFile,selSuffix="-1")
{
b<-read.csv(cnvFile,stringsAsFactors=FALSE,row.names=1,header=TRUE)
bb<-column_to_rownames(rownames_to_column(b,var="Cell") %>% dplyr::filter(str_detect(Cell,selSuffix)) %>% mutate(Cell=str_replace(Cell,"-2","-1")),var="Cell")
#b<-read.csv("~/SF11956_2_new22_cnv_scores.csv",stringsAsFactors=FALSE,row.names=1,header=TRUE)
#b<-read.csv("~/diaz_3_SF11956_2_nolog_test_new_cnv_anno_binary.csv",stringsAsFactors=FALSE,row.names=1,header=TRUE)
#names(atac_file$orig.ident)
b1<-left_join(data.frame(Cell=names(atacFile$seurat_clusters)),rownames_to_column(bb,var="Cell"),by="Cell")
#SMOOTH
print(b1)
b1c<-b1 %>% mutate(clust=atacFile$seurat_clusters)
specRound <- function(x,boost=0.1)
{
#  print(x-2)
# print(sign(x-2)*round(abs(x-2)+boost))
#print(abs(x-2)+boost)
return (2+sign(x-2)*round(abs(x-2)+boost,digits=0))
}
b1c_round<-b1c %>% group_by(clust) %>% summarise_at(vars(starts_with("chr")),list(mean),na.rm=TRUE)  %>% mutate_at(vars(starts_with("chr")),funs(specRound(.,boost=-0.10)))
cluster_clean<-left_join(data.frame(clust=atacFile$seurat_clusters),b1c_round,by="clust")
rownames(cluster_clean)=names(atacFile$seurat_clusters)
atacFile<-AddMetaData(atacFile,cluster_clean)
return(atacFile)
}
prettyPlot <- function(mFile,chromList,plotPrefix,sampPrefixA,legendPrefixX=0.20,legendPrefixY=0.25)
{
library(extrafont)
pdf(file=sprintf(plotPrefix,sampPrefixA),width=2.5,height=2.5)
list_of_vals<-levels(factor(unlist(mFile@meta.data[,chromList])))
for (chrom in chromList) {
#barcode list = names(atac_file$orig.ident)
mFile <- AddMetaData(mFile,factor(mFile@meta.data[,chrom],levels=c(list_of_vals,"NA")),"tmpchrom")
mFile$tmpchrom[which(is.na(mFile$tmpchrom))]<-"NA"
# print(pbmc@meta.data["tmpchrom"])
plot1<-DimPlot(object = mFile,group.by = c("tmpchrom"),pt.size=0.3)+ggtitle(chrom)+NoLegend() +
scale_color_brewer(type = "qual",palette = "Paired",drop=FALSE) +
theme(axis.text = element_text(size=10,family="Arial"),axis.title = element_text(size=10,family="Arial"),title = element_text(size=10,face = "plain",family="Arial"),
legend.direction = "vertical",legend.box.just = "right",legend.position = c(legendPrefixX,legendPrefixY))
print(plot1)
}
#colnames(b)
dev.off()
}
prettyPlotCluster <- function(mFile,plotPrefix,sampPrefixA)
{
library(extrafont)
pdf(sprintf(plotPrefix,sampPrefixA),width=2.5,height=2.5)
plot1<-DimPlot(object = mFile,pt.size=0.3) +
scale_color_brewer(type = "qual",palette = "Paired",drop=FALSE) +
theme(axis.text = element_text(size=10,family="Arial"),axis.title = element_text(size=10,family="Arial"),title = element_text(size=10,face = "plain",family="Arial"))
print(plot1)
dev.off()
}
smoothChromCNV <- function(atacFile,boostVal=-0.1,sigDig=0)
{
chroms_i<-colnames(atacFile@meta.data)[which(str_detect(colnames(atacFile@meta.data),"chr[0-9]+[pq]"))]
b1c<-rownames_to_column(data.frame(atacFile@meta.data[c(chroms_i,"seurat_clusters")]),var="Cell") %>% mutate(clust=seurat_clusters) %>% dplyr::select(-seurat_clusters)
#SMOOTH
print(b1c)
specRound <- function(x,boost=0.1,sigDig=0)
{
#  print(x-2)
# print(sign(x-2)*round(abs(x-2)+boost))
#print(abs(x-2)+boost)
return (2+sign(x-2)*round(abs(x-2)+boost,digits=sigDig))
}
b1c_round<-b1c %>% group_by(clust) %>% summarise_at(vars(starts_with("chr")),list(mean),na.rm=TRUE)  %>% mutate_at(vars(starts_with("chr")),funs(specRound(.,boost=boostVal,sigDig=sigDig)))
cluster_clean<-left_join(data.frame(clust=atacFile$seurat_clusters),b1c_round,by="clust")
rownames(cluster_clean)=names(atacFile$seurat_clusters)
atacFile<-AddMetaData(atacFile,cluster_clean)
return(atacFile)
}
smoothChromCNVAmp <- function(atacFile,boostVal=0.1,sigDig=0)
{
chroms_i<-colnames(atacFile@meta.data)[which(str_detect(colnames(atacFile@meta.data),"chr[0-9]+_"))]
b1c<-rownames_to_column(data.frame(atacFile@meta.data[c(chroms_i,"seurat_clusters")]),var="Cell") %>% mutate(clust=seurat_clusters) %>% dplyr::select(-seurat_clusters)
#SMOOTH
print(b1c)
specRound <- function(x,boost=0.1,sigDig=0)
{
#  print(x-2)
# print(sign(x-2)*round(abs(x-2)+boost))
#print(abs(x-2)+boost)
return (2+sign(x-2)*round(abs(x-2)+boost,digits=sigDig))
}
b1c_round<-b1c %>% group_by(clust) %>% summarise_at(vars(starts_with("chr")),list(mean),na.rm=TRUE)  %>% mutate_at(vars(starts_with("chr")),funs(specRound(.,boost=boostVal,sigDig=sigDig)))
cluster_clean<-left_join(data.frame(clust=atacFile$seurat_clusters),b1c_round,by="clust")
rownames(cluster_clean)=names(atacFile$seurat_clusters)
atacFile<-AddMetaData(atacFile,cluster_clean)
return(atacFile)
}
atac_file<-initNormalize(atac_file)
atac_file2<-initNormalize(atac_file2)
library(stringr)
library(tidyr)
library(dplyr)
library(tibble)
atac_file<-loadChromCNVOriginal("~/p2_3_fixed_cnv_scores.csv",atacFile=atac_file,selSuffix="-1")
atac_file2<-loadChromCNVOriginal("~/p2_3_fixed_cnv_scores.csv",atacFile=atac_file2,selSuffix="-2")
#data.frame(metavals=colnames(atac_file@meta.data)) %>% dplyr::filter(str_detect())
chroms<-colnames(atac_file@meta.data)[which(str_detect(colnames(atac_file@meta.data),"chr[0-9]+[pq]"))]
chroms2<-colnames(atac_file2@meta.data)[which(str_detect(colnames(atac_file2@meta.data),"chr[0-9]+[pq]"))]
atac_file
atac_file$nCount_peaks
which(atac_file$nCount_peaks>1000)
atac_file$blacklist_region_fragments
atac_file$blacklist_region_fragments>0
atac_file$lowmapq
hist(atac_file$lowmapq)
which(atac_file$nCount_peaks>1000)
length(which(atac_file$nCount_peaks>1000))
atac_file <- subset(x=atac_file,nCount_peaks>1000)
atac_file
merged_dr<-merge(x=atac_file,y=atac_file2,add.cell.ids=c("D","R"))
merged_dr<-initNormalize(merged_dr)
merged_dr<-initRegionalize(merged_dr)
chroms_m<-colnames(merged_dr@meta.data)[which(str_detect(colnames(merged_dr@meta.data),"chr[0-9]+[pq]"))]
merged_dr<-AddMetaData(merged_dr,sapply(names(merged_dr$orig.ident),str_sub,1,1),col.name="prefix")
prettyPlot(merged_dr,chromList=chroms_m,"~/%s_chroms_all_cell_unsmooth.pdf","p2DR")
prettyPlotCluster(merged_dr,"~/%s_clusters_initial.pdf","p2DR")
merged_dr<-smoothChromCNV(merged_dr)
prettyPlot(merged_dr,chromList=chroms_m,"~/%s_chroms_all_cell_smooth.pdf","p2DR")
DimPlot(merged_dr,group.by="prefix")
merged_dr <- subset(x=merged_dr,subset = (chr20p == "4"))
library(sctransform)
pbmc2 <- SCTransform(merged_dr,return.only.var.genes = FALSE,do.center = FALSE,assay = "peaks")
prettyPlotCluster(pbmc2,"~/%s_clusters_initial_subset.pdf","p2DR_SC")
prettyPlot(pbmc2,chromList=chroms_m,"~/%s_chroms_all_cell_smooth_subset.pdf","p2DR_SC")
pbmc2<-initRegionalize(pbmc2,assayType='SCT',doTFIDF = FALSE)
prettyPlotCluster(pbmc2,"~/%s_clusters_initial_subset.pdf","p2DR_SC")
prettyPlot(pbmc2,chromList=chroms_m,"~/%s_chroms_all_cell_smooth_subset.pdf","p2DR_SC")
